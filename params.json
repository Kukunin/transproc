{"name":"Transproc","tagline":"Transform Ruby objects in functional style","body":"[gem]: https://rubygems.org/gems/transproc\r\n[travis]: https://travis-ci.org/solnic/transproc\r\n[gemnasium]: https://gemnasium.com/solnic/transproc\r\n[codeclimate]: https://codeclimate.com/github/solnic/transproc\r\n[coveralls]: https://coveralls.io/r/solnic/transproc\r\n[inchpages]: http://inch-ci.org/github/solnic/transproc\r\n\r\n# Transproc [![Join the chat at https://gitter.im/solnic/transproc](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/solnic/transproc?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n[![Gem Version](https://badge.fury.io/rb/transproc.svg)][gem]\r\n[![Build Status](https://travis-ci.org/solnic/transproc.svg?branch=master)][travis]\r\n[![Dependency Status](https://gemnasium.com/solnic/transproc.png)][gemnasium]\r\n[![Code Climate](https://codeclimate.com/github/solnic/transproc/badges/gpa.svg)][codeclimate]\r\n[![Test Coverage](https://codeclimate.com/github/solnic/transproc/badges/coverage.svg)][codeclimate]\r\n[![Inline docs](http://inch-ci.org/github/solnic/transproc.svg?branch=master)][inchpages]\r\n\r\nFunctional transformations for Ruby. It's currently used as one of the data\r\nmapping backends in [Ruby Object Mapper](http://rom-rb.org).\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'transproc'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install transproc\r\n\r\n## Usage\r\n\r\n``` ruby\r\nrequire 'transproc/all'\r\n\r\n# compose transformation functions\r\ninclude Transproc::Helper\r\n\r\ntransformation = t(:map_array, t(:symbolize_keys) >> t(:rename_keys, user_name: :user))\r\ntransformation >>= t(:wrap, :address, [:city, :street, :zipcode])\r\n\r\n# call the function\r\ntransformation.call(\r\n  [\r\n    { 'user_name' => 'Jane',\r\n      'city' => 'NYC',\r\n      'street' => 'Street 1',\r\n      'zipcode' => '123' }\r\n  ]\r\n)\r\n# => [{:user=>\"Jane\", :address=>{:city=>\"NYC\", :street=>\"Street 1\", :zipcode=>\"123\"}}]\r\n\r\n# Define your own transformations easily\r\nTransproc(:to_json, -> v { JSON.dump(v) })\r\n\r\nTransproc(:to_json).call([{ name: 'Jane' }])\r\n# => \"[{\\\"name\\\":\\\"Jane\\\"}]\"\r\n\r\n# ...or create a module with custom transformations\r\nmodule MyTransformations\r\n  extend Transproc::Functions\r\n\r\n  def load_json(v)\r\n    JSON.load(v)\r\n  end\r\nend\r\n\r\n(Transproc(:load_json) >> Transproc(:symbolize_keys)).call('[{\"name\":\"Jane\"}]')\r\n# => [{ :name => \"Jane\" }]\r\n```\r\n\r\n## Credits\r\n\r\nThis project is inspired by the work of following people:\r\n\r\n* [Markus Schirp](https://github.com/mbj) and [morpher](https://github.com/mbj/morpher) project\r\n* [Josep M. Bach](https://github.com/txus) and [kleisli](https://github.com/txus/kleisli) project\r\n\r\n## Contributing\r\n\r\n1. Fork it ( https://github.com/solnic/transproc/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}